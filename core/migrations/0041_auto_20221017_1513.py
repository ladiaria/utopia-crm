# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2022-10-17 15:13
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models
import util.dates


class Migration(migrations.Migration):

    dependencies = [
        ('support', '0015_issue_envelope'),
        ('logistics', '0012_auto_20221017_1513'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0040_historicalcontact'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalActivity',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('asap', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('priority', models.SmallIntegerField(choices=[(1, 'Highest'), (2, 'High'), (3, 'Normal'), (4, 'Low'), (5, 'Lowest')], default=3)),
                ('activity_type', models.CharField(blank=True, choices=[('S', 'Campaign start'), ('C', 'Call'), ('M', 'E-mail'), ('L', 'Link hit'), ('W', 'WhatsApp message or other apps'), ('E', 'Event participation'), ('I', 'In-place visit')], max_length=1, null=True)),
                ('status', models.CharField(choices=[('P', 'Pending'), ('C', 'Completed'), ('D', 'Delayed')], default='P', max_length=1)),
                ('direction', models.CharField(choices=[('I', 'In'), ('O', 'Out')], default='O', max_length=1)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('campaign', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Campaign')),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('issue', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='support.Issue', verbose_name='Issue')),
                ('product', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Product')),
                ('seller', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='support.Seller', verbose_name='Seller')),
            ],
            options={
                'verbose_name': 'historical activity',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalAddress',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('address_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address 1')),
                ('address_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address 2')),
                ('city', models.CharField(blank=True, default='Montevideo', max_length=64, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, default='Montevideo', max_length=50, null=True, verbose_name='State')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('address_type', models.CharField(choices=[('digital', 'Digital'), ('physical', 'Physical')], max_length=50, verbose_name='Address type')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('default', models.BooleanField(default=False, verbose_name='Default')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Contact', verbose_name='Contact')),
                ('geo_ref_address', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='logistics.GeorefAddress', verbose_name='GeorefAddress')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'historical address',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalPriceRule',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('amount_to_pick', models.PositiveSmallIntegerField(default=0)),
                ('mode', models.PositiveSmallIntegerField(choices=[(1, 'Replace all'), (2, 'Replace one'), (3, 'Add new')], default=1)),
                ('add_wildcard', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('priority', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('choose_one_product', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Product')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('resulting_product', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Product')),
            ],
            options={
                'verbose_name': 'historical price rule',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalSubscription',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('type', models.CharField(choices=[('P', 'Promotion'), ('N', 'Normal'), ('F', 'Gift'), ('S', 'Staff')], default='N', max_length=1)),
                ('status', models.CharField(choices=[('AP', 'Awaiting payment'), ('NC', 'Not consolidated'), ('OK', 'Normal'), ('PA', 'Paused'), ('DE', 'End because of debt'), ('NE', 'Normal end'), ('ER', 'Error')], default='OK', max_length=2)),
                ('billing_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Billing name')),
                ('billing_id_doc', models.CharField(blank=True, max_length=20, null=True, verbose_name='Billing Identification Document')),
                ('rut', models.CharField(blank=True, max_length=12, null=True, verbose_name='R.U.T.')),
                ('billing_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Billing phone')),
                ('balance', models.DecimalField(blank=True, decimal_places=2, help_text='Positive for discount, negative for surcharge', max_digits=10, null=True, verbose_name='Balance')),
                ('send_bill_copy_by_email', models.BooleanField(default=True, verbose_name='Send bill copy by email')),
                ('billing_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Billing email')),
                ('envelope', models.NullBooleanField(default=False, verbose_name='Envelope')),
                ('free_envelope', models.NullBooleanField(default=False, verbose_name='Free envelope')),
                ('start_date', models.DateField(blank=True, default=util.dates.get_default_start_date, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('next_billing', models.DateField(blank=True, default=util.dates.get_default_next_billing, null=True, verbose_name='Next billing')),
                ('highlight_in_listing', models.BooleanField(default=False, verbose_name='Highlight in listing')),
                ('send_pdf', models.BooleanField(default=False, verbose_name='Send pdf')),
                ('inactivity_reason', models.IntegerField(blank=True, choices=[(1, 'Normal end'), (2, 'Paused'), (3, 'Upgraded'), (13, 'Debtor'), (16, 'Debtor, automatic unsubscription'), (99, 'N/A')], null=True, verbose_name='Inactivity reason')),
                ('unsubscription_date', models.DateField(blank=True, null=True, verbose_name='Unsubscription date')),
                ('unsubscription_reason', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Does not like content'), (2, 'Economical reasons'), (3, 'Other')], null=True, verbose_name='Unsubscription reason')),
                ('unsubscription_channel', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'E-Mail'), (2, 'Phone')], null=True, verbose_name='Unsubscription channel')),
                ('unsubscription_type', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Complete unsubscription'), (2, 'Partial unsubscription'), (3, 'Product change'), (4, 'Upgrade')], null=True, verbose_name='Unsubscription type')),
                ('unsubscription_requested', models.BooleanField(default=False, verbose_name='Requested unsubscription')),
                ('unsubscription_addendum', models.TextField(blank=True, null=True, verbose_name='Unsubscription addendum')),
                ('frequency', models.PositiveSmallIntegerField(choices=[(1, 'Monthly'), (3, 'Quarterly'), (6, 'Biannual'), (12, 'Annual')], default=1)),
                ('payment_type', models.CharField(blank=True, max_length=2, null=True, verbose_name='Payment type')),
                ('payment_certificate', models.TextField(blank=True, max_length=100, null=True)),
                ('card_id', models.CharField(blank=True, max_length=32, null=True)),
                ('customer_id', models.CharField(blank=True, max_length=32, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('billing_address', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Address', verbose_name='Billing address')),
                ('campaign', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Campaign', verbose_name='Campaign')),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Contact', verbose_name='Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('pickup_point', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='logistics.PickupPoint', verbose_name='Pickup point')),
                ('unsubscription_manager', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Unsubscription manager')),
                ('updated_from', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Subscription')),
            ],
            options={
                'verbose_name': 'historical subscription',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AlterField(
            model_name='contactcampaignstatus',
            name='status',
            field=models.SmallIntegerField(choices=[(1, 'Not yet contacted'), (2, 'Contacted'), (3, 'Called, could not contact'), (4, 'Ended with contact'), (5, 'Ended without contact'), (6, 'Switch to morning'), (7, 'Switch to afternoon/evening')], default=1),
        ),
    ]
