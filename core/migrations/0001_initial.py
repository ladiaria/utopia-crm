# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-12-14 15:53
from __future__ import unicode_literals

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields
import util.dates


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(blank=True, null=True)),
                ('asap', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('priority', models.SmallIntegerField(choices=[(1, 'Highest'), (2, 'High'), (3, 'Normal'), (4, 'Low'), (5, 'Lowest')], default=3)),
                ('activity_type', models.CharField(blank=True, choices=[(b'S', 'Campaign start'), (b'C', 'Call'), (b'M', 'E-mail'), (b'L', 'Link hit'), (b'E', 'Event participation')], max_length=1, null=True)),
                ('status', models.CharField(choices=[(b'P', 'Pending'), (b'C', 'Completed'), (b'D', 'Delayed')], default='P', max_length=1)),
                ('direction', models.CharField(choices=[(b'I', 'In'), (b'O', 'Out')], default='O', max_length=1)),
            ],
            options={
                'verbose_name': 'activity',
                'verbose_name_plural': 'activities',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address_1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address 1')),
                ('address_2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address 2')),
                ('city', models.CharField(blank=True, default=None, max_length=64, null=True, verbose_name='City')),
                ('state', models.CharField(blank=True, default=None, max_length=50, null=True, verbose_name='State')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('address_type', models.CharField(choices=[(b'digital', 'Digital'), (b'physical', 'Physical')], max_length=50, verbose_name='Address type')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('default', models.BooleanField(default=False, verbose_name='Default')),
            ],
            options={
                'verbose_name': 'address',
                'verbose_name_plural': 'addresses',
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('priority', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='Priority')),
                ('days', models.PositiveSmallIntegerField(blank=True, default=5, null=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'campaign',
                'verbose_name_plural': 'campaigns',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator("^[A-Za-z0-9\xf1\xfc\xe1\xe9\xed\xf3\xfa\xd1\xdc\xc1\xc9\xcd\xd3\xda _\\'.\\-]*$", 'This name only admits alphanumeric characters')], verbose_name='Name')),
                ('id_document', models.CharField(blank=True, max_length=20, null=True, verbose_name='Identifcation Document')),
                ('phone', models.CharField(max_length=20, verbose_name='Phone')),
                ('work_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Work phone')),
                ('mobile', models.CharField(blank=True, max_length=20, null=True, verbose_name='Mobile')),
                ('email', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Email')),
                ('no_email', models.BooleanField(default=False, verbose_name='No email')),
                ('gender', models.CharField(blank=True, choices=[(b'M', 'Male'), (b'F', 'Female'), (b'O', 'Other')], max_length=1, null=True, verbose_name='Gender')),
                ('education', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Primary'), (2, 'Incomplete secondary'), (3, 'Complete secondary'), (4, 'Incomplete university'), (5, 'Complete university'), (6, 'Postgraduate'), (100, "Doesn't want to inform")], null=True, verbose_name='Education')),
                ('birthdate', models.DateField(blank=True, null=True, verbose_name='Birthdate')),
                ('private_birthdate', models.BooleanField(default=False, verbose_name='Private birthdate')),
                ('protected', models.BooleanField(default=False, verbose_name='Protected')),
                ('protection_reason', models.TextField(blank=True, null=True, verbose_name='Protection reason')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('allow_polls', models.BooleanField(default=True, verbose_name='Allows polls')),
                ('allow_promotions', models.BooleanField(default=True, verbose_name='Allows promotions')),
                ('old_pk', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ('-id',),
                'verbose_name': 'contact',
                'verbose_name_plural': 'contacts',
            },
        ),
        migrations.CreateModel(
            name='ContactCampaignStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.SmallIntegerField(choices=[(1, 'Not yet contacted'), (2, 'Contacted'), (3, 'Called, could not contact'), (4, 'Ended with contact'), (5, 'Ended without contact')], default=1)),
                ('campaign_resolution', models.CharField(blank=True, choices=[(b'SP', 'Started promotion'), (b'S1', 'Success with promotion'), (b'S2', 'Success with direct sale'), (b'CF', 'Cannot find contact'), (b'CA', 'Call Again'), (b'DN', 'Do not call anymore'), (b'EP', 'Error in promotion'), (b'NI', 'Not interested'), (b'LO', 'Logistics'), (b'AS', 'Already a subscriber')], max_length=2, null=True)),
                ('campaign_reject_reason', models.CharField(blank=True, choices=[(b'F', 'Failed delivery'), (b'E', 'Financial reasons'), (b'D', 'Error in data'), (b'N', 'Never signed in for promotion'), (b'P', 'Did not like the product'), (b'C', 'Did not like the content'), (b'R', "Cannot reach the contact's location"), (b'K', 'Did not know what they signed up for'), (b'T', 'Does not read/Does not have time'), (b'Z', 'Dangerous zone'), (b'A', 'Does not accept call'), (b'O', 'Accepts call but does not accept offer'), (b'H', 'Accepts call, will think about it')], max_length=1, null=True)),
                ('date_created', models.DateField(auto_now_add=True)),
                ('last_action_date', models.DateField(auto_now=True)),
                ('times_contacted', models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='ContactProductHistory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[(b'A', 'Active'), (b'I', 'Inactive'), (b'P', 'Paused'), (b'R', 'Resumed')], max_length=1)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='DynamicContactFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=150, unique=True)),
                ('allow_promotions', models.BooleanField(default=False)),
                ('allow_polls', models.BooleanField(default=False)),
                ('mode', models.PositiveSmallIntegerField(choices=[(1, 'At least one of the products'), (2, 'All products')])),
                ('autosync', models.BooleanField(default=False, help_text='Automatically sync with Mailtrain')),
                ('mailtrain_id', models.CharField(blank=True, max_length=9)),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('old_pk', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'institution',
                'verbose_name_plural': 'institutions',
            },
        ),
        migrations.CreateModel(
            name='Ocupation',
            fields=[
                ('code', models.CharField(max_length=3, primary_key=True, serialize=False, verbose_name='Code')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
            ],
            options={
                'ordering': ('code',),
                'verbose_name': 'ocupation',
                'verbose_name_plural': 'ocupations',
            },
        ),
        migrations.CreateModel(
            name='PriceRule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('amount_to_pick', models.PositiveSmallIntegerField(default=0)),
                ('mode', models.PositiveSmallIntegerField(choices=[(1, 'Replace all'), (2, 'Replace one'), (3, 'Add new')], default=1)),
                ('add_wildcard', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True, null=True)),
                ('priority', models.PositiveSmallIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('slug', django_extensions.db.fields.AutoSlugField(blank=True, editable=False, null=True, populate_from='name')),
                ('active', models.BooleanField(default=False, verbose_name='Active')),
                ('price', models.IntegerField(default=0)),
                ('type', models.CharField(choices=[(b'S', 'Subscription'), (b'N', 'Newsletter'), (b'D', 'Discount'), (b'O', 'Other')], default='O', max_length=1)),
                ('weekday', models.IntegerField(blank=True, choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday'), (7, 'Sunday'), (8, 'All week'), (9, 'Weekdays'), (10, 'Weekends')], default=None, null=True)),
                ('bundle_product', models.BooleanField(default=False, verbose_name='Bundle of products')),
                ('billing_priority', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('digital', models.BooleanField(default=False, verbose_name='Digital')),
                ('old_pk', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ('id',),
                'verbose_name': 'product',
                'verbose_name_plural': 'products',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('type', models.CharField(choices=[(b'P', 'Promotion'), (b'N', 'Normal'), (b'F', 'Free')], default='N', max_length=1)),
                ('status', models.CharField(blank=True, choices=[(b'AP', 'Awaiting payment'), (b'NC', 'Not consolidated'), (b'OK', 'Normal'), (b'PA', 'Paused'), (b'DE', 'End because of debt'), (b'NE', 'Normal end')], max_length=2, null=True)),
                ('billing_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Billing name')),
                ('billing_id_doc', models.CharField(blank=True, max_length=20, null=True, verbose_name='Billing Identification Document')),
                ('rut', models.CharField(blank=True, max_length=12, null=True, verbose_name='R.U.T.')),
                ('billing_phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Billing phone')),
                ('balance', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Balance')),
                ('send_bill_copy_by_email', models.BooleanField(default=False, verbose_name='Send bill copy by email')),
                ('billing_email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Billing email')),
                ('envelope', models.BooleanField(default=False, verbose_name='Envelope', null=True)),
                ('free_envelope', models.BooleanField(default=False, verbose_name='Free envelope', null=True)),
                ('re_routed', models.BooleanField(default=False, verbose_name='Rerouted', null=True)),
                ('start_date', models.DateField(blank=True, default=util.dates.get_default_start_date, null=True, verbose_name='Start date')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='End date')),
                ('next_billing', models.DateField(blank=True, default=util.dates.get_default_next_billing, null=True, verbose_name='Next billing')),
                ('resubscription_date', models.DateField(blank=True, null=True, verbose_name='Resubscription date')),
                ('highlight_in_listing', models.BooleanField(default=False, verbose_name='Highlight in listing')),
                ('send_pdf', models.BooleanField(default=False, verbose_name='Send pdf')),
                ('directions', models.TextField(blank=True, null=True, verbose_name='Directions')),
                ('inactivity_reason', models.IntegerField(blank=True, choices=[(1, 'Normal end'), (2, 'Paused'), (9, 'Lost the route'), (10, "We don't reach this address"), (11, 'Bad addition to the database'), (12, 'Duplicated address'), (13, 'Debtor'), (15, 'Vacations'), (16, 'Debtor, automatic unsubscription'), (99, 'N/A')], null=True, verbose_name='Inactivity reason')),
                ('label_message', models.CharField(blank=True, max_length=40, null=True, verbose_name='Label message')),
                ('unsubscription_date', models.DateField(blank=True, null=True, verbose_name='Unsubscription date')),
                ('unsubscription_reason', models.PositiveSmallIntegerField(blank=True, choices=[(1, 'Does not like content'), (2, 'Economical reasons'), (3, 'Other')], null=True, verbose_name='Unsubscription reason')),
                ('unsubscription_addendum', models.TextField(blank=True, null=True, verbose_name='Unsubscription addendum')),
                ('frequency', models.PositiveSmallIntegerField(choices=[(1, 'Monthly'), (3, 'Quarterly'), (6, 'Biannual'), (12, 'Annual')], default=1)),
                ('payment_type', models.CharField(blank=True, choices=[('O', 'Other'), ('D', 'Debit card'), ('S', 'Cash payment')], max_length=2, null=True, verbose_name='Payment type')),
                ('card_id', models.CharField(blank=True, max_length=13, null=True)),
                ('customer_id', models.CharField(blank=True, max_length=24, null=True)),
            ],
            options={
                'verbose_name': 'subscription',
                'verbose_name_plural': 'subscriptions',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionNewsletter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubscriptionProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('copies', models.PositiveSmallIntegerField(default=1)),
                ('order', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Order')),
                ('address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.Address')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.Product')),
            ],
        ),
        migrations.CreateModel(
            name='Subtype',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('old_pk', models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'subtype',
                'verbose_name_plural': 'subtypes',
            },
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('value', models.CharField(max_length=255, verbose_name='value')),
                ('type', models.CharField(blank=True, choices=[(b'impresion', 'Impression'), (b'impresion_fs', 'Imperssion Weekend')], max_length=255, verbose_name='type')),
            ],
            options={
                'ordering': ('name',),
                'verbose_name': 'variable',
                'verbose_name_plural': 'variables',
            },
        ),
    ]
