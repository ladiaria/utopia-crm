# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2022-10-17 15:13
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0041_auto_20221017_1513'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('support', '0015_issue_envelope'),
    ]

    operations = [
        migrations.CreateModel(
            name='HistoricalIssue',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('date_created', models.DateField(blank=True, editable=False)),
                ('date', models.DateField(default=datetime.date.today, verbose_name='Date')),
                ('category', models.CharField(blank=True, choices=[('L', 'Logistics'), ('I', 'Invoicing'), ('M', 'Collections'), ('C', 'Contents'), ('W', 'Web'), ('S', 'Service'), ('O', 'Community')], max_length=1, null=True)),
                ('subcategory', models.CharField(blank=True, choices=[('L01', 'Did not arrive'), ('L02', 'Arrived late'), ('L03', 'Arrived wet'), ('L04', 'Changed delivery place'), ('L05', 'Not delivered'), ('L06', 'Delivered to a wrong place'), ('L07', 'Wrong label'), ('L08', 'Wrong invoice delivered'), ('L10', 'Paused route'), ('L11', "Invoice wasn't delivered"), ('L99', 'Uncategorized logistics issue'), ('I01', "Product doesn't belong"), ('I02', 'Price issue'), ('I03', 'Payment type issue'), ('I04', 'Subscription not being billed'), ('I05', 'Payment type change'), ('I06', 'Collection issue'), ('I07', 'Collection issue (inactive subscription)'), ('I08', 'Credit card expiration'), ('I09', 'Debt issue'), ('I99', 'Uncategorized invoicing issue'), ('C01', 'Suggestions'), ('C02', 'Complaints'), ('C03', 'Corrections'), ('C04', 'Requests'), ('C05', 'Contact journalist'), ('C06', 'Forward content'), ('W01', 'Access (sign-in)'), ('W02', 'Registry (sign-up)'), ('W03', 'Website not available'), ('W04', 'Settings issue'), ('W05', 'Articles limit reached'), ('W06', 'Not using service'), ('S01', 'Promotion request'), ('S02', 'Register new subscription'), ('S03', 'End subscription'), ('S04', 'Schedule subscription pause'), ('S05', 'Schedule address change'), ('S06', 'Vacation (Resorts)'), ('S07', 'Newsletters'), ('S08', 'Complaints on service'), ('S09', 'Payment types'), ('S10', 'Errors in data'), ('S11', 'Special cases'), ('S12', 'Schedule task'), ('S12', 'Change in subscription'), ('O01', 'Community Benefits'), ('O02', 'Community Events'), ('O03', 'Caf√©'), ('O04', 'Media-lab'), ('O05', 'Shop'), ('O06', 'Community Suggestions'), ('O07', 'Community Complaints'), ('O08', 'Community Requests'), ('O09', 'Polls/Surveys'), ('N/A', 'No sub-category')], max_length=3, null=True)),
                ('inside', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('progress', models.TextField(blank=True, null=True)),
                ('answer_1', models.CharField(blank=True, choices=[('I1', 'Collected'), ('L1', 'Delivered again'), ('L2', 'Not delivered'), ('L3', "Can't be delivered that way"), ('L4', 'Delivered late'), ('L5', 'Problems to be delivered'), ('L6', 'Delivered in a specific way')], max_length=2, null=True)),
                ('answer_2', models.TextField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('next_action_date', models.DateField(blank=True, null=True)),
                ('closing_date', models.DateField(blank=True, null=True)),
                ('copies', models.PositiveSmallIntegerField(default=0)),
                ('envelope', models.BooleanField(default=False, verbose_name='Envelope', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('address', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Address')),
                ('assigned_to', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Contact', verbose_name='Contact')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Product')),
            ],
            options={
                'verbose_name': 'historical issue',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalScheduledTask',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('category', models.CharField(choices=[('AC', 'Address change'), ('PD', 'Start of pause'), ('PA', 'End of pause'), ('PS', 'Start of partial pause'), ('PE', 'End of partial pause')], max_length=2, verbose_name='Type')),
                ('completed', models.BooleanField(default=False, verbose_name='Completed')),
                ('execution_date', models.DateField(verbose_name='Date of execution')),
                ('creation_date', models.DateField(blank=True, editable=False, verbose_name='Creation date')),
                ('modification_date', models.DateField(blank=True, editable=False, null=True, verbose_name='Modification date')),
                ('label_message', models.CharField(blank=True, max_length=40, null=True)),
                ('special_instructions', models.TextField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('address', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Address', verbose_name='Address')),
                ('contact', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Contact', verbose_name='Contact')),
            ],
            options={
                'verbose_name': 'historical scheduled task',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.AlterField(
            model_name='issue',
            name='answer_1',
            field=models.CharField(blank=True, choices=[('I1', 'Collected'), ('L1', 'Delivered again'), ('L2', 'Not delivered'), ('L3', "Can't be delivered that way"), ('L4', 'Delivered late'), ('L5', 'Problems to be delivered'), ('L6', 'Delivered in a specific way')], max_length=2, null=True),
        ),
        migrations.AlterField(
            model_name='issue',
            name='category',
            field=models.CharField(blank=True, choices=[('L', 'Logistics'), ('I', 'Invoicing'), ('M', 'Collections'), ('C', 'Contents'), ('W', 'Web'), ('S', 'Service'), ('O', 'Community')], max_length=1, null=True),
        ),
        migrations.AlterField(
            model_name='issue',
            name='subcategory',
            field=models.CharField(blank=True, choices=[('L01', 'Did not arrive'), ('L02', 'Arrived late'), ('L03', 'Arrived wet'), ('L04', 'Changed delivery place'), ('L05', 'Not delivered'), ('L06', 'Delivered to a wrong place'), ('L07', 'Wrong label'), ('L08', 'Wrong invoice delivered'), ('L10', 'Paused route'), ('L11', "Invoice wasn't delivered"), ('L99', 'Uncategorized logistics issue'), ('I01', "Product doesn't belong"), ('I02', 'Price issue'), ('I03', 'Payment type issue'), ('I04', 'Subscription not being billed'), ('I05', 'Payment type change'), ('I06', 'Collection issue'), ('I07', 'Collection issue (inactive subscription)'), ('I08', 'Credit card expiration'), ('I09', 'Debt issue'), ('I99', 'Uncategorized invoicing issue'), ('C01', 'Suggestions'), ('C02', 'Complaints'), ('C03', 'Corrections'), ('C04', 'Requests'), ('C05', 'Contact journalist'), ('C06', 'Forward content'), ('W01', 'Access (sign-in)'), ('W02', 'Registry (sign-up)'), ('W03', 'Website not available'), ('W04', 'Settings issue'), ('W05', 'Articles limit reached'), ('W06', 'Not using service'), ('S01', 'Promotion request'), ('S02', 'Register new subscription'), ('S03', 'End subscription'), ('S04', 'Schedule subscription pause'), ('S05', 'Schedule address change'), ('S06', 'Vacation (Resorts)'), ('S07', 'Newsletters'), ('S08', 'Complaints on service'), ('S09', 'Payment types'), ('S10', 'Errors in data'), ('S11', 'Special cases'), ('S12', 'Schedule task'), ('S12', 'Change in subscription'), ('O01', 'Community Benefits'), ('O02', 'Community Events'), ('O03', 'Caf√©'), ('O04', 'Media-lab'), ('O05', 'Shop'), ('O06', 'Community Suggestions'), ('O07', 'Community Complaints'), ('O08', 'Community Requests'), ('O09', 'Polls/Surveys'), ('N/A', 'No sub-category')], max_length=3, null=True),
        ),
        migrations.AlterField(
            model_name='issuestatus',
            name='category',
            field=models.CharField(blank=True, choices=[('L', 'Logistics'), ('I', 'Invoicing'), ('M', 'Collections'), ('C', 'Contents'), ('W', 'Web'), ('S', 'Service'), ('O', 'Community')], max_length=2, null=True),
        ),
        migrations.AlterField(
            model_name='issuesubcategory',
            name='category',
            field=models.CharField(blank=True, choices=[('L', 'Logistics'), ('I', 'Invoicing'), ('M', 'Collections'), ('C', 'Contents'), ('W', 'Web'), ('S', 'Service'), ('O', 'Community')], max_length=2, null=True),
        ),
        migrations.AlterField(
            model_name='scheduledtask',
            name='category',
            field=models.CharField(choices=[('AC', 'Address change'), ('PD', 'Start of pause'), ('PA', 'End of pause'), ('PS', 'Start of partial pause'), ('PE', 'End of partial pause')], max_length=2, verbose_name='Type'),
        ),
        migrations.AddField(
            model_name='historicalscheduledtask',
            name='ends',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='support.ScheduledTask'),
        ),
        migrations.AddField(
            model_name='historicalscheduledtask',
            name='history_user',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='historicalscheduledtask',
            name='subscription',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Subscription'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='status',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='support.IssueStatus'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='sub_category',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='support.IssueSubcategory'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='subscription',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.Subscription'),
        ),
        migrations.AddField(
            model_name='historicalissue',
            name='subscription_product',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='core.SubscriptionProduct'),
        ),
    ]
